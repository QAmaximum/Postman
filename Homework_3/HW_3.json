{
	"info": {
		"_postman_id": "99bfa18e-939e-4b8f-bd72-c4c3cba798ae",
		"name": "start35 HW_3",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "EP_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// 3. Спарсить response body в json\r",
							"let responceData = pm.response.json ()\r",
							"\r",
							"// 4. Спарсить request\r",
							"let requestData = pm.request.url.query.toObject ()\r",
							"console.log(requestData)\r",
							"\r",
							"// 5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"name\", function () {\r",
							"pm.expect(responceData.name).to.eql(requestData.name);\r",
							"});\r",
							"\r",
							"// 6. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test(\"age\", function () {\r",
							"pm.expect(responceData.age).to.eql(requestData.age);\r",
							"});\r",
							"\r",
							"// 7. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test(\"salary\", function () {\r",
							"pm.expect(+responceData.salary).to.eql(+requestData.salary);\r",
							"});\r",
							"\r",
							"// 8. Вывести в консоль параметр family из response\r",
							"console.log(responceData.family)\r",
							"\r",
							"// 9. Проверить, что у параметра dog есть параметры name\r",
							"pm.test(\"property_name\", function () {\r",
							"pm.expect(responceData.family.pets.dog).to.have.property('name');\r",
							"});\r",
							"\r",
							"// 10. Проверить, что у параметра dog есть параметры age\r",
							"pm.test(\"property_age\", function () {\r",
							"pm.expect(responceData.family.pets.dog).to.have.property('age');\r",
							"});\r",
							"\r",
							"// 11. Проверить, что параметр name имеет значение Luky\r",
							"pm.test(\"dog_name\", function () {\r",
							"pm.expect(responceData.family.pets.dog.name).to.eql('Luky');\r",
							"});\r",
							"\r",
							"// 12. Проверить, что параметр age имеет значение 4\r",
							"pm.test(\"dog_age\", function () {\r",
							"pm.expect(responceData.family.pets.dog.age).to.eql(4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Maxim",
							"type": "default"
						},
						{
							"key": "age",
							"value": "25",
							"type": "default"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "default"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Maxim&age=25&salary=1000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Maxim"
						},
						{
							"key": "age",
							"value": "25"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		}
	]
}